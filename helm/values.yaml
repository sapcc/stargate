# Default values for stargate.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: sapcc/stargate
  tag: v201810221418
  pullPolicy: IfNotPresent

# the port used to expose the stargate API
port: 8080

# the URL of the Prometheus Alertmanager
# alertmanagerURL:

# the stargate's URL
# externalURL:

# optional path to a configuration file
# configFile:

ingress:
  enabled: true
  annotations:
    ingress.kubernetes.io/ingress.class: nginx-internet
    vice-president: "true"
    disco: "true"

# values for stable/nginx-ingress chart
nginx-ingress-internet:
  enabled: true

  revisionHistoryLimit: 5
  rbac:
    create: true
  serviceAccount:
    create: false
    name: default

  controller:
    image:
      repository: sapcc/nginx-ingress-controller
      tag: "0.19.0"

    ingressClass: nginx-internet

    electionID: ingress-internet-controller-leader

    livenessProbe:
      initialDelaySeconds: 30

    kind: Deployment
    replicaCount: 3

    minReadySeconds: 60
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1

    config:
      http-snippet: |
        map $ssl_client_s_dn $ssl_client_s_dn_cn {
            default "anonymous";
            ~CN=(?<CN>[^/,\"]+) $CN;
        }
      location-snippet: |
        proxy_set_header X-REMOTE-USER $ssl_client_s_dn_cn;
      proxy-read-timeout: '300'
      proxy-body-size: '0k'
      server-name-hash-bucket-size: '128'
      map-hash-bucket-size: '128'
      worker-processes: '8'
      disable-ipv6: 'true'
      ssl-redirect: 'false'
      enable-underscores-in-headers: "true"

    extraArgs:
      # disabled until https://github.com/kubernetes/ingress-nginx/issues/3034 is fixed
      enable-dynamic-certificates: "false"
      annotations-prefix: ingress.kubernetes.io
      sync-period: 5m0s

    stats:
      enabled: true

    metrics:
      enabled: true
      service:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/probe: "10254"

    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10254"

      targetPorts:
        http: http
        https: https

    affinity:
      # don't co-locate replicas of the ingress controller on the same node
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - app: nginx-ingress-internet
                key: component
                operator: In
                values:
                - controller

  defaultBackend:
    enabled: true
    replicaCount: 2
    minAvailable: 1

    image:
      repository: sapcc/defaultbackend
      tag: '1.4'
      pullPolicy: IfNotPresent

    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"

    affinity:
      # don't co-locate replicas of the ingress backend on the same node
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - app: nginx-ingress-internet
                key: component
                operator: In
                values:
                - default-backend
